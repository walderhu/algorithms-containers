#include <cassert>
#include <iostream>

#include "s21_containers.hpp"

using namespace std;

void test1() {
  // s21::unordered_set<int> ust;  //= {5, 5, 5, 5, 3, 2, 1, 0, -3, 11};
  // s21::unordered_set<int> ust = {5, 5, 5, 5, 3, 2, 1, 0, -3, 11};
  s21::unordered_set ust = {5, 5, 5, 5, 3, 2, 1, 0, -3, 11};
  ust.insert(5);
  ust.insert(5);
  ust.insert(5);
  ust.insert(3);
  ust.insert(2);
  ust.insert(1);
  assert(!ust.empty());
  // assert(ust.empty() && "Вот так можн добавлять описание для ассерта");
  DEBUG(ust);
}

void test2() { cout << 5 % 1 << endl; }

int main() {
  test1();
  return 0;
}

/*
а че я вообще копаюсь тут((
самый изи способ сделать все это вместо моего листа сделать vector
и будет
vector<array<vector, 100>> и так уже манипулировать моей хэш таблицей
пофигу вообще на все, это будет выглядеть мега легко и понятно
самое главное понятно и оптимизировано
я везде абсолютно буду делегировать все вычисления на уже существующие методы
и ну нафиг тот лист, все равно можно установить начальное значение
и эта типо динамическая расширяемость с хз каким временем итерации отпадет

крч если и переделывать то на такой парадигме
*/